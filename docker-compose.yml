version: '3.4'

networks:
  frontend:
  backend:
services:
  catalog:
    image: jewels/catalogapi
    build:
      context: .\ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      ExternalCatalogBaseUrl: http://localhost:6811
      DatabaseServer: mssqlserver
      DatabaseName: catalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "6811:80"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  webmvc:
    image: jewels/webmvc
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      CatalogUrl: http://catalog
      CartUrl: http://cart
      IdentityUrl: http://192.168.86.121:6703
      CallBackUrl: http://localhost:6812
    ports:
      - "6812:80"
    container_name: jewelswebmvc
    networks:
      - frontend
    depends_on:
      - catalog
      - cart
      - tokenserver

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: jewels/tokenapi
    environment:
      Mvcclient: http://localhost:6812
    ports:
      - "6703:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  cart:
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    image: jewels/cartapi
    environment: 
      IdentityUrl: http://192.168.86.121:6703
      ConnectionString: basket.data
    ports:
      - "6814:80"
    container_name: cartapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokenserver
      - basket.data

  order:
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    image: jewels/orderapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl:  http://192.168.86.121:6703
      DatabaseServer: mssqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "6815:80"
    container_name: orderapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      
  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1449:1433"
    container_name: jewelssqlserver
    networks:
      - backend

  basket.data:
    image: redis
    container_name: basketdata
    ports:
      - "6080:6379"
    networks:
      - backend
